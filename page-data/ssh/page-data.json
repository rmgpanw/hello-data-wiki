{
    "componentChunkName": "component---node-modules-gatsby-theme-primer-wiki-src-templates-post-query-js",
    "path": "/ssh/",
    "result": {"data":{"mdx":{"id":"e3edd151-8f1c-5824-a7d9-e8182a001fbc","tableOfContents":{"items":[{"url":"#ssh","title":"ssh","items":[{"url":"#overview","title":"Overview"},{"url":"#config","title":"config"},{"url":"#keys","title":"keys"}]}]},"fields":{"title":"ssh","slug":"/ssh/","url":"https://rmgpanw.github.io/hello-data-wiki/hello-data-wiki/ssh/","editUrl":"https://github.com/rmgpanw/hello-data-wiki/tree/main/wiki/ssh.md","lastUpdatedAt":"2022-11-30T15:23:02.000Z","lastUpdated":"11/30/2022","gitCreatedAt":"2022-11-30T15:23:02.000Z","shouldShowTitle":false},"frontmatter":{"title":"","description":null,"imageAlt":null,"tags":[],"date":null,"dateModified":null,"language":null,"seoTitle":null,"image":null},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"ssh\"\n  }, \"ssh\"), mdx(\"h2\", {\n    \"id\": \"overview\"\n  }, \"Overview\"), mdx(\"p\", null, \"In directory \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"~/.ssh\"), \":\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Create an ssh config file (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/ssh/#config\",\n    \"title\": \"ssh\"\n  }, \"ssh\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Generate ssh keys and upload to remote servers (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/ssh/#keys\",\n    \"title\": \"ssh\"\n  }, \"ssh\"), \")\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-mermaid\"\n  }, \"flowchart LR\\n    subgraph Local\\n    A(Your computer)\\n    end\\n    A --> B{UCL Gateway}\\n    subgraph UCL\\n    B --> C(Myriad)\\n    end\\n\")), mdx(\"h2\", {\n    \"id\": \"config\"\n  }, \"config\"), mdx(\"p\", null, \"Create \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"~/.ssh/config\"), \" (updating \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<TEXT_TO_REPLACE>\"), \"):\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"# UCL's gateway node\\nHost UclSshGateway\\n  IdentityFile ~/.ssh/ucl_key\\n  User <UCL_USERNAME>\\n  HostName ssh-gateway.ucl.ac.uk\\n\\n# UCL's Myriad HPC server\\nHost myriad\\n  IdentityFile ~/.ssh/ucl_key\\n  User <UCL_USERNAME>\\n  HostName myriad.rc.ucl.ac.uk\\n  proxyCommand ssh -W myriad.rc.ucl.ac.uk:22 UclSshGateway\\n\\n# For ineracting with GitHub\\nHost github.com\\n  Hostname ssh.github.com\\n  Port 443\\n  IdentityFile ~/.ssh/github_key\\n\\n# Store ssh key passwords securely\\nHost *\\n  AddKeysToAgent yes\\n  UseKeychain yes\\n\")), mdx(\"h2\", {\n    \"id\": \"keys\"\n  }, \"keys\"), mdx(\"p\", null, \"Create ssh keys, e.g. create \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ucl_key\"), \" from above as follows:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"ssh-keygen -f ~/.ssh/ucl_key\\n\")), mdx(\"p\", null, \"This will generate \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ucl_key\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ucl_key.pub\"), \". The public key now needs to be uploaded to the server\"), mdx(\"p\", null, \"See also:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.freecodecamp.org/news/the-ultimate-guide-to-ssh-setting-up-ssh-keys/\"\n  }, \"https://www.freecodecamp.org/news/the-ultimate-guide-to-ssh-setting-up-ssh-keys/\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://linuxhandbook.com/add-ssh-public-key-to-server/\"\n  }, \"https://linuxhandbook.com/add-ssh-public-key-to-server/\"))));\n}\n;\nMDXContent.isMDXComponent = true;","rawBody":"# ssh\r\n\r\n## Overview\r\nIn directory `~/.ssh`:\r\n- Create an ssh config file ([[ssh#config]])\r\n- Generate ssh keys and upload to remote servers ([[ssh#keys]])\r\n\r\n```mermaid\r\nflowchart LR\r\n\tsubgraph Local\r\n\tA(Your computer)\r\n\tend\r\n\tA --> B{UCL Gateway}\r\n\tsubgraph UCL\r\n\tB --> C(Myriad)\r\n\tend\r\n```\r\n\r\n## config\r\n\r\nCreate `~/.ssh/config` (updating `<TEXT_TO_REPLACE>`):\r\n\r\n```\r\n# UCL's gateway node\r\nHost UclSshGateway\r\n  IdentityFile ~/.ssh/ucl_key\r\n  User <UCL_USERNAME>\r\n  HostName ssh-gateway.ucl.ac.uk\r\n\r\n# UCL's Myriad HPC server\r\nHost myriad\r\n  IdentityFile ~/.ssh/ucl_key\r\n  User <UCL_USERNAME>\r\n  HostName myriad.rc.ucl.ac.uk\r\n  proxyCommand ssh -W myriad.rc.ucl.ac.uk:22 UclSshGateway\r\n\r\n# For ineracting with GitHub\r\nHost github.com\r\n  Hostname ssh.github.com\r\n  Port 443\r\n  IdentityFile ~/.ssh/github_key\r\n\r\n# Store ssh key passwords securely\r\nHost *\r\n  AddKeysToAgent yes\r\n  UseKeychain yes\r\n```\r\n\r\n## keys\r\n\r\nCreate ssh keys, e.g. create `ucl_key` from above as follows:\r\n\r\n```\r\nssh-keygen -f ~/.ssh/ucl_key\r\n```\r\n\r\nThis will generate `ucl_key` and `ucl_key.pub`. The public key now needs to be uploaded to the server\r\n\r\nSee also:\r\n- https://www.freecodecamp.org/news/the-ultimate-guide-to-ssh-setting-up-ssh-keys/\r\n- https://linuxhandbook.com/add-ssh-public-key-to-server/","excerpt":"ssh Overview In directory  ~/.ssh : Create an ssh config file ([ ssh#config ]) Generate ssh keys and upload to remote servers ([ ssh#keys ]â€¦","outboundReferences":[],"inboundReferences":[]},"tagsOutbound":{"nodes":[]}},"pageContext":{"tags":[],"slug":"/ssh/","sidebarItems":[{"title":"Categories","items":[{"title":"ssh","url":"/ssh/","items":[]},{"title":"Start here","url":"/","items":[]}]},{"title":"","items":[{"title":"Recently Updated","url":"/latest/","collapse":true,"indent":false,"items":[{"title":"11-30: Start here","url":"/"},{"title":"11-30: ssh","url":"/ssh/"}]}]},{"title":"Tags","items":[]}],"tagsGroups":[],"latestPosts":[{"fields":{"slug":"/","title":"Start here","lastUpdatedAt":"2022-11-30T15:23:02.000Z","lastUpdated":"11/30/2022"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/ssh/","title":"ssh","lastUpdatedAt":"2022-11-30T15:23:02.000Z","lastUpdated":"11/30/2022"},"frontmatter":{"draft":false,"tags":[]}}]}},
    "staticQueryHashes": ["2230547434","2320115945","3495835395","451533639"]}