{
    "componentChunkName": "component---node-modules-gatsby-theme-primer-wiki-src-templates-post-query-js",
    "path": "/",
    "result": {"data":{"mdx":{"id":"0ccc6b11-720f-567d-9469-93b1718013cf","tableOfContents":{"items":[{"url":"#start-here","title":"Start here","items":[{"url":"#computer-setup","title":"Computer setup"},{"url":"#self-directed-learning","title":"Self-directed learning"}]}]},"fields":{"title":"Start here","slug":"/","url":"https://rmgpanw.github.io/hello-data-wiki/hello-data-wiki/","editUrl":"https://github.com/rmgpanw/hello-data-wiki/tree/main/wiki/index.md","lastUpdatedAt":"2022-11-30T15:23:02.000Z","lastUpdated":"11/30/2022","gitCreatedAt":"2022-11-30T15:23:02.000Z","shouldShowTitle":false},"frontmatter":{"title":"","description":null,"imageAlt":null,"tags":[],"date":null,"dateModified":null,"language":null,"seoTitle":null,"image":null},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"start-here\"\n  }, \"Start here\"), mdx(\"h2\", {\n    \"id\": \"computer-setup\"\n  }, \"Computer setup\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", \"[R]\", \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", \"[Python]\", \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", \"[VS Code]\", \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", \"[Quarto]\", \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/ssh/\",\n    \"title\": \"ssh\"\n  }, \"ssh\"), \" \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", \"[Zotero]\", \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", \"[Obsidian]\", \"]\")), mdx(\"h2\", {\n    \"id\": \"self-directed-learning\"\n  }, \"Self-directed learning\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Coding skills\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Note taking\"), mdx(\"li\", {\n    parentName: \"ul\"\n  })));\n}\n;\nMDXContent.isMDXComponent = true;","rawBody":"# Start here\r\n\r\n## Computer setup\r\n- [[R]]\r\n- [[Python]]\r\n- [[VS Code]]\r\n- [[Quarto]]\r\n- [[ssh]] \r\n- [[Zotero]]\r\n- [[Obsidian]]\r\n\r\n## Self-directed learning\r\n- Coding skills\r\n- Note taking\r\n- ","excerpt":"Start here Computer setup [ R ] [ Python ] [ VS Code ] [ Quarto ] [ ssh ]  [ Zotero ] [ Obsidian ] Self-directed learning Coding skills Notâ€¦","outboundReferences":[{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"ssh\"\n  }, \"ssh\"), mdx(\"h2\", {\n    \"id\": \"overview\"\n  }, \"Overview\"), mdx(\"p\", null, \"In directory \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"~/.ssh\"), \":\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Create an ssh config file (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/ssh/#config\",\n    \"title\": \"ssh\"\n  }, \"ssh\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Generate ssh keys and upload to remote servers (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/ssh/#keys\",\n    \"title\": \"ssh\"\n  }, \"ssh\"), \")\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-mermaid\"\n  }, \"flowchart LR\\n    subgraph Local\\n    A(Your computer)\\n    end\\n    A --> B{UCL Gateway}\\n    subgraph UCL\\n    B --> C(Myriad)\\n    end\\n\")), mdx(\"h2\", {\n    \"id\": \"config\"\n  }, \"config\"), mdx(\"p\", null, \"Create \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"~/.ssh/config\"), \" (updating \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<TEXT_TO_REPLACE>\"), \"):\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"# UCL's gateway node\\nHost UclSshGateway\\n  IdentityFile ~/.ssh/ucl_key\\n  User <UCL_USERNAME>\\n  HostName ssh-gateway.ucl.ac.uk\\n\\n# UCL's Myriad HPC server\\nHost myriad\\n  IdentityFile ~/.ssh/ucl_key\\n  User <UCL_USERNAME>\\n  HostName myriad.rc.ucl.ac.uk\\n  proxyCommand ssh -W myriad.rc.ucl.ac.uk:22 UclSshGateway\\n\\n# For ineracting with GitHub\\nHost github.com\\n  Hostname ssh.github.com\\n  Port 443\\n  IdentityFile ~/.ssh/github_key\\n\\n# Store ssh key passwords securely\\nHost *\\n  AddKeysToAgent yes\\n  UseKeychain yes\\n\")), mdx(\"h2\", {\n    \"id\": \"keys\"\n  }, \"keys\"), mdx(\"p\", null, \"Create ssh keys, e.g. create \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ucl_key\"), \" from above as follows:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"ssh-keygen -f ~/.ssh/ucl_key\\n\")), mdx(\"p\", null, \"This will generate \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ucl_key\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ucl_key.pub\"), \". The public key now needs to be uploaded to the server\"), mdx(\"p\", null, \"See also:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.freecodecamp.org/news/the-ultimate-guide-to-ssh-setting-up-ssh-keys/\"\n  }, \"https://www.freecodecamp.org/news/the-ultimate-guide-to-ssh-setting-up-ssh-keys/\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://linuxhandbook.com/add-ssh-public-key-to-server/\"\n  }, \"https://linuxhandbook.com/add-ssh-public-key-to-server/\"))));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"slug":"/ssh/","title":"ssh","shouldShowTitle":false}}],"inboundReferences":[]},"tagsOutbound":{"nodes":[]}},"pageContext":{"tags":[],"slug":"/","sidebarItems":[{"title":"Categories","items":[{"title":"ssh","url":"/ssh/","items":[]},{"title":"Start here","url":"/","items":[]}]},{"title":"","items":[{"title":"Recently Updated","url":"/latest/","collapse":true,"indent":false,"items":[{"title":"11-30: Start here","url":"/"},{"title":"11-30: ssh","url":"/ssh/"}]}]},{"title":"Tags","items":[]}],"tagsGroups":[],"latestPosts":[{"fields":{"slug":"/","title":"Start here","lastUpdatedAt":"2022-11-30T15:23:02.000Z","lastUpdated":"11/30/2022"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/ssh/","title":"ssh","lastUpdatedAt":"2022-11-30T15:23:02.000Z","lastUpdated":"11/30/2022"},"frontmatter":{"draft":false,"tags":[]}}]}},
    "staticQueryHashes": ["2230547434","2320115945","3495835395","451533639"]}